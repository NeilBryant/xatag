* for 1.0
- Way to gather used tags from new copied files that have tags.  Need to
  easily recreate or at least guess known_tags file.
** recoll
- Expand warning when new key is used but not added
- Ignored_keys file that won't be added to fields file
- Option to skip recoll index update, and skip regenerating fields file
- def cmd_execute(options); what benefit would this have that recoll wouldn't
  have?
** FUSE
- Use recoll index or make another one?
** refactor
- Don't export functions that are only needed internally.
- pylint
** documentation
- internal comments
- man page
- help screen
*** web pages
**** user level documentation
- setting up recoll
**** API docs
*** topics
Suggest making all tag keys singular.

> xatag -a "some;other;tags" cat_in_the_hat.pdf
cat_in_the_hat.pdf: tag:     childrens other some tags
cat_in_the_hat.pdf: author:   Suess
> xatag -a two\ words cat_in_the_hat.pdf
cat_in_the_hat.pdf: tag:     childrens other some tags 'two words'
cat_in_the_hat.pdf: author:   Suess

Tag keys shouldn't have punctuation other than colons, if you're going to use
Recoll.

All punctuation is translated to colons for recoll prefixes, stripped for xapian.

* eventually
- Return proper error codes along with warnings
- command line completion
- Implement tag values relations (equivalent, includes)
** color
- optionally color tags
- color filenames using lscolors
- change formatting if stdout is console or a pipe

* maybe?
- Allow different xattr prefix?
- Use info in other keys, or from a parser, to fill in a tag. Maybe use Recoll
   for this
- Interactively tag a file
- Interactively manage known tags, etc.
- An options like -i/-I in rm, or an undo facility (hook into apply_to_files)
